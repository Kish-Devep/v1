local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Jext1/HIGHRealms/refs/heads/main/HighRelamsOrion.lua')))()

local Window = OrionLib:MakeWindow({Name = "High Realms", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest", IntroEnabled = false})

local Tab2 = Window:MakeTab({
    Name = "Mob Farm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Tab3 = Window:MakeTab({
    Name = "Flower Farm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local player = game.Players.LocalPlayer
local teleporting = false
local farmingFlowers = false
local selectedTool = "Diamond Pickaxe"
local plantPartNames = {"Poppy", "Meshes/Flower_Poppy_Flower", "Spots", "Flower"}
local maxIndex = 74
local indices = {}

for i = 1, maxIndex do
    table.insert(indices, i)
end

local tools = {
    "Diamond Pickaxe",
    "Ginger Pickaxe"
}

local function getClosestPlant()
    local closestPlant = nil
    local closestDistance = math.huge
    local plantsFolder = game.Workspace:FindFirstChild("Island")

    if plantsFolder then
        for _, part in pairs(plantsFolder:GetDescendants()) do
            if part:IsA("BasePart") and table.find(plantPartNames, part.Name) then
                local distance = (player.Character.HumanoidRootPart.Position - part.Position).Magnitude
                if distance < closestDistance then
                    closestPlant = part
                    closestDistance = distance
                end
            end
        end
    end
    return closestPlant, closestDistance
end

local function teleportToPlant()
    while farmingFlowers do
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            repeat wait(0.1) until player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        end

        local plant, distance = getClosestPlant()
        if plant then
            player.Character.HumanoidRootPart.CFrame = plant.CFrame * CFrame.new(0, 3, 0)
        end
        wait(0.2)
    end
end

local function damageIndicesInBatches(batchSize, delayBetweenBatches)
    local damageValues = {
        ["Diamond Pickaxe"] = 256,
        ["Ginger Pickaxe"] = 275
    }

    spawn(function()
        local batch = {}
        for i, index in ipairs(indices) do
            table.insert(batch, index)
            if #batch >= batchSize or i == #indices then
                for _, batchIndex in ipairs(batch) do
                    local args = {
                        [1] = damageValues[selectedTool],
                        [2] = {
                            ["Level"] = 9,
                            ["Index"] = batchIndex,
                            ["World"] = "Mines"
                        }
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage").Packages.Knit.Services.BlockService.RF.DamageBlock:InvokeServer(unpack(args))
                    end)
                end
                batch = {}
                wait(delayBetweenBatches)
            end
        end
    end)
end

local function farmPlants()
    spawn(teleportToPlant)
    while farmingFlowers do
        damageIndicesInBatches(9, 0.05)
        wait(0.1)
    end
end

Tab2:AddDropdown({
    Name = "Seleccionar Mob",
    Default = "Ninguno",
    Options = {"Slime", "Gizmos", "Scatters", "Muchers", "Flamelet", "Spiders", "Grimthorn", "Arachnella"},
    Callback = function(Value)
        selectedMob = Value
    end    
})

Tab2:AddDropdown({
    Name = "Seleccionar Arma",
    Default = "Diamond Hammer",
    Options = {"Diamond Hammer", "Frostbite Sword", "Wood Sword", "Twilight Sword"},
    Callback = function(Value)
        selectedWeapon = Value
    end    
})

Tab2:AddToggle({
    Name = "Mob Farm",
    Default = false,
    Callback = function(Value)
        teleporting = Value
        if teleporting then
            spawn(teleportToSelectedMob)
            spawn(attackMobs)
        end
    end    
})

Tab3:AddDropdown({
    Name = "Seleccionar Herramienta",
    Default = "Diamond Pickaxe",
    Options = tools,
    Callback = function(Value)
        selectedTool = Value
    end    
})

Tab3:AddToggle({
    Name = "Flower Farm",
    Default = false,
    Callback = function(Value)
        farmingFlowers = Value
        if farmingFlowers then
            spawn(farmPlants)
        end
    end
})

